/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class ProductListComponent {
    constructor() {
        this.name = 'test';
        this.items = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ProductListComponent.decorators = [
    { type: Component, args: [{
                selector: 'ram-product-list',
                template: `<p>{{name}} List</p>
<table class="table table-hover">
    <thead>
        <tr>
            <th class="col-size-sm">#</th>
            <th class="col-size-lg">Code</th>
            <th class="col-size-lg">Name</th>
            <th>About</th>
            <th>Price ($)</th>
            <th>Raiting</th>
        </tr>
    </thead>
    <tbody>
        <ng-container *ngIf="items?.length else noData">
            <tr *ngFor="let item of items; let i = index">
                <td class="col-size-sm">{{i+1}}/{{items.length}}</td>
                <td class="col-size-lg">{{item.productCode}}</td>
                <td class="col-size-lg">{{item.productName}}</td>
                <td>{{item.description}}</td>
                <td style="text-align: center">{{item.value | number : '1.0-2' }}</td>
                <td style="text-align: center">{{item.starRating}}</td>
            </tr>
        </ng-container>
    </tbody>
</table>

<ng-template #noData>
    <div class="mx-3 my-3">
        No Data available.
    </div>
</ng-template>`,
                styles: []
            },] },
];
/** @nocollapse */
ProductListComponent.ctorParameters = () => [];
ProductListComponent.propDecorators = {
    "name": [{ type: Input },],
    "items": [{ type: Input },],
};
function ProductListComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ProductListComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ProductListComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    ProductListComponent.propDecorators;
    /** @type {?} */
    ProductListComponent.prototype.name;
    /** @type {?} */
    ProductListComponent.prototype.items;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3JhbS1wcm9kdWN0LWxpc3QvIiwic291cmNlcyI6WyJsaWIvcHJvZHVjdC1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFxQ3pELE1BQU07SUFJSjtvQkFGZ0IsTUFBTTtxQkFDTCxFQUFFO0tBQ0Y7Ozs7SUFFakIsUUFBUTtLQUNQOzs7WUExQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBOEJHO2dCQUNiLE1BQU0sRUFBRSxFQUFFO2FBQ1g7Ozs7O3FCQUdFLEtBQUs7c0JBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdyYW0tcHJvZHVjdC1saXN0JyxcbiAgdGVtcGxhdGU6IGA8cD57e25hbWV9fSBMaXN0PC9wPlxuPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtaG92ZXJcIj5cbiAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aCBjbGFzcz1cImNvbC1zaXplLXNtXCI+IzwvdGg+XG4gICAgICAgICAgICA8dGggY2xhc3M9XCJjb2wtc2l6ZS1sZ1wiPkNvZGU8L3RoPlxuICAgICAgICAgICAgPHRoIGNsYXNzPVwiY29sLXNpemUtbGdcIj5OYW1lPC90aD5cbiAgICAgICAgICAgIDx0aD5BYm91dDwvdGg+XG4gICAgICAgICAgICA8dGg+UHJpY2UgKCQpPC90aD5cbiAgICAgICAgICAgIDx0aD5SYWl0aW5nPC90aD5cbiAgICAgICAgPC90cj5cbiAgICA8L3RoZWFkPlxuICAgIDx0Ym9keT5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIml0ZW1zPy5sZW5ndGggZWxzZSBub0RhdGFcIj5cbiAgICAgICAgICAgIDx0ciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtczsgbGV0IGkgPSBpbmRleFwiPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNvbC1zaXplLXNtXCI+e3tpKzF9fS97e2l0ZW1zLmxlbmd0aH19PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjb2wtc2l6ZS1sZ1wiPnt7aXRlbS5wcm9kdWN0Q29kZX19PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJjb2wtc2l6ZS1sZ1wiPnt7aXRlbS5wcm9kdWN0TmFtZX19PC90ZD5cbiAgICAgICAgICAgICAgICA8dGQ+e3tpdGVtLmRlc2NyaXB0aW9ufX08L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlclwiPnt7aXRlbS52YWx1ZSB8IG51bWJlciA6ICcxLjAtMicgfX08L3RkPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlclwiPnt7aXRlbS5zdGFyUmF0aW5nfX08L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC90Ym9keT5cbjwvdGFibGU+XG5cbjxuZy10ZW1wbGF0ZSAjbm9EYXRhPlxuICAgIDxkaXYgY2xhc3M9XCJteC0zIG15LTNcIj5cbiAgICAgICAgTm8gRGF0YSBhdmFpbGFibGUuXG4gICAgPC9kaXY+XG48L25nLXRlbXBsYXRlPmAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgUHJvZHVjdExpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIG5hbWUgPSAndGVzdCc7XG4gIEBJbnB1dCgpIGl0ZW1zID0gW107XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19